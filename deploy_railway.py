#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway
"""

import os
import subprocess
import sys

def check_git():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    try:
        subprocess.run(['git', 'status'], check=True, capture_output=True)
        return True
    except (subprocess.CalledProcessError, FileNotFoundError):
        return False

def init_git():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    subprocess.run(['git', 'init'])
    subprocess.run(['git', 'add', '.'])
    subprocess.run(['git', 'commit', '-m', 'Initial commit: Telegram System Message Cleaner Bot'])

def create_github_repo():
    """–°–æ–∑–¥–∞–µ—Ç GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("\nüìù –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("3. –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å README")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
    
    repo_url = input("\n–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: ").strip()
    
    if repo_url:
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub...")
        subprocess.run(['git', 'remote', 'add', 'origin', repo_url])
        subprocess.run(['git', 'branch', '-M', 'main'])
        subprocess.run(['git', 'push', '-u', 'origin', 'main'])
        print("‚úÖ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ GitHub!")
        return repo_url
    return None

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        'bot.py',
        'config.py', 
        'requirements.txt',
        'Procfile',
        'runtime.txt'
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!")
    return True

def main():
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    if not check_files():
        print("‚ùå –ù–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
    if not check_git():
        print("üîß Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º...")
        init_git()
    else:
        print("‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    repo_url = create_github_repo()
    
    if repo_url:
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ Railway:")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://railway.app")
        print("2. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ GitHub")
        print("3. –ù–∞–∂–º–∏—Ç–µ 'New Project'")
        print("4. –í—ã–±–µ—Ä–∏—Ç–µ 'Deploy from GitHub repo'")
        print("5. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        print("6. –í —Ä–∞–∑–¥–µ–ª–µ 'Variables' –¥–æ–±–∞–≤—å—Ç–µ BOT_TOKEN")
        print("7. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è!")
        
        print(f"\nüîó –í–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_url}")
    else:
        print("\n‚ö†Ô∏è GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω.")
        print("–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã.")

if __name__ == "__main__":
    main() 